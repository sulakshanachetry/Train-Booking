/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.example.entities.Train;
import org.example.entities.User;
import org.example.services.UserBookingService;

import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        System.out.println("IRCTC APP: Train Booking application");
        User currentUser = null;
        int option= 0;
        Scanner scan = new Scanner(System.in);
        UserBookingService userBookingService;
        try{
            userBookingService= new UserBookingService();
        } catch( IOException ex){
            System.out.println("Something went wrong. Please try again later.");
            ex.printStackTrace();
            return;
        }

        while(option!=7) {
            System.out.println("Choose option");
            System.out.println("1. Sign up");
            System.out.println("2. Login");
            System.out.println("3. Fetch Bookings");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a Seat");
            System.out.println("6. Cancel my Booking");
            System.out.println("7. Exit the App");

            option = scan.nextInt();

            switch (option){
                case 1:
                    System.out.println("Enter your username");
                    String nameForSignUp = scan.next();
                    System.out.println("Enter your password");
                    String passwordForSignUp = scan.next();
                    Optional<User> newUser = userBookingService.registerUser(nameForSignUp,passwordForSignUp);
                    if(newUser.isPresent()) {
                        currentUser= newUser.get();
                        System.out.println("You are now logged in as " + currentUser.getName());
                    }else{
                        System.out.println("Something went wrong. Please try again later.");
                    }
                    break;
                case 2:
                    System.out.println("Enter your username");
                    String nameForLogin = scan.next();
                    System.out.println("Enter your password");
                    String passwordForLogin = scan.next();
                    Optional<User> loggedInUser = userBookingService.loginUser(nameForLogin,passwordForLogin);
                    if(loggedInUser.isPresent()){
                        currentUser = loggedInUser.get();
                        System.out.println("Login successful! Welcome, " + currentUser.getName());
                    }else{
                        System.out.println("Invalid username or password");
                    }
                    break;
                case 3:
                    if(currentUser==null) {
                        System.out.println("Login or Signup to continue");
                    }else{
                        userBookingService.fetchBookings(currentUser);
                    }
                    break;
                case 4:
                    System.out.println("Enter the source");
                    String source = scan.next();
                    System.out.println("Enter the destination");
                    String dest = scan.next();

                    List<Train> trains= userBookingService.getTrains(source,dest);

                    if(trains.isEmpty()){
                        System.out.println("No trains found between " + source + " and " + dest);
                    }else{
                        System.out.println("Trains available from " + source + " to " + dest + ":");
                        for(Train t:trains){
                            System.out.println("Train No: "+ t.getTrainNo());
                            for(Map.Entry<String, String> entry: t.getStationTimes().entrySet()) {
                             System.out.println(entry.getKey() + ": " + entry.getValue());
                            }
                            System.out.println("--------------------------");
                        }
                    }
                    break;
                case 5:
                    if(currentUser==null) {
                        System.out.println("Login or Signup to continue");
                        break;
                    }
                    System.out.println("Enter the Train No you want to book:");
                    Integer trainNo = scan.nextInt();
                    Train trainToBook = userBookingService.getTrainByTrainNo(trainNo);

                    if(trainToBook==null) {
                        System.out.println("Invalid Train No!");
                        break;
                    }

                    System.out.println("Select a seat out of these seats:");
                    List<List<Integer>>seats = userBookingService.fetchSeats(trainToBook);

                    for(List<Integer>row: seats){
                        for(Integer val:row){
                            System.out.print(val + " ");
                        }
                        System.out.println();
                    }
                    System.out.println("Here 0 indicates available seats");

                    System.out.println("Select a row");
                    int row = scan.nextInt();
                    System.out.println("Select a col");
                    int col = scan.nextInt();

                    Boolean booked = userBookingService.bookTrainSeats(currentUser,trainToBook,row,col);
                    if (booked.equals(Boolean.TRUE)) {
                        System.out.println(" Booked! Enjoy your journey");
                    } else {
                        System.out.println(" Can't book this seat, try another one");
                    }
                    break;
                case 6:
                    if(currentUser==null) {
                        System.out.println("Login or Signup to continue");
                        break;
                    }
                    System.out.println("Enter the ticket id to cancel the booking");
                    String ticketId = scan.next();
                    try{
                        userBookingService.cancelBooking(currentUser,ticketId);
                        System.out.println("Booking cancelled successfully!");
                    }catch(IOException ex){
                        System.out.println("Booking not found!");
                    }
                    break;
                case 7:
                    System.out.println("Exiting...");
                    break;

                default:
                    System.out.println("Invalid option, try again.");
                    break;

            }
        }
    }
}
